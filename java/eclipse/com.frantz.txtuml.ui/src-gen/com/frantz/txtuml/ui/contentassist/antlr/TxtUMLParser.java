/*
* generated by Xtext
*/
package com.frantz.txtuml.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.frantz.txtuml.services.TxtUMLGrammarAccess;

public class TxtUMLParser extends AbstractContentAssistParser {
	
	@Inject
	private TxtUMLGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.frantz.txtuml.ui.contentassist.antlr.internal.InternalTxtUMLParser createParser() {
		com.frantz.txtuml.ui.contentassist.antlr.internal.InternalTxtUMLParser result = new com.frantz.txtuml.ui.contentassist.antlr.internal.InternalTxtUMLParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
					put(grammarAccess.getClassMemberAccess().getAlternatives(), "rule__ClassMember__Alternatives");
					put(grammarAccess.getSequenceSectionDeclAccess().getAlternatives(), "rule__SequenceSectionDecl__Alternatives");
					put(grammarAccess.getMessageOperatorAccess().getAlternatives(), "rule__MessageOperator__Alternatives");
					put(grammarAccess.getDataTypeAccess().getAlternatives(), "rule__DataType__Alternatives");
					put(grammarAccess.getVisibilityAccess().getAlternatives(), "rule__Visibility__Alternatives");
					put(grammarAccess.getClassDeclAccess().getGroup(), "rule__ClassDecl__Group__0");
					put(grammarAccess.getClassDeclAccess().getGroup_2(), "rule__ClassDecl__Group_2__0");
					put(grammarAccess.getClassDeclAccess().getGroup_2_2(), "rule__ClassDecl__Group_2_2__0");
					put(grammarAccess.getClassSectionDeclAccess().getGroup(), "rule__ClassSectionDecl__Group__0");
					put(grammarAccess.getClassSectionDeclAccess().getGroup_2(), "rule__ClassSectionDecl__Group_2__0");
					put(grammarAccess.getVisibilityDeclAccess().getGroup(), "rule__VisibilityDecl__Group__0");
					put(grammarAccess.getMethodDeclAccess().getGroup(), "rule__MethodDecl__Group__0");
					put(grammarAccess.getAttributeDeclAccess().getGroup(), "rule__AttributeDecl__Group__0");
					put(grammarAccess.getAssociationDeclAccess().getGroup(), "rule__AssociationDecl__Group__0");
					put(grammarAccess.getSequenceDeclAccess().getGroup(), "rule__SequenceDecl__Group__0");
					put(grammarAccess.getSequenceDeclAccess().getGroup_3(), "rule__SequenceDecl__Group_3__0");
					put(grammarAccess.getActorSectionDeclAccess().getGroup(), "rule__ActorSectionDecl__Group__0");
					put(grammarAccess.getActorSectionDeclAccess().getGroup_3(), "rule__ActorSectionDecl__Group_3__0");
					put(grammarAccess.getMessageSectionDeclAccess().getGroup(), "rule__MessageSectionDecl__Group__0");
					put(grammarAccess.getMessageSectionDeclAccess().getGroup_3(), "rule__MessageSectionDecl__Group_3__0");
					put(grammarAccess.getActorDeclAccess().getGroup(), "rule__ActorDecl__Group__0");
					put(grammarAccess.getMessageDeclAccess().getGroup(), "rule__MessageDecl__Group__0");
					put(grammarAccess.getMessageDeclAccess().getGroup_4(), "rule__MessageDecl__Group_4__0");
					put(grammarAccess.getModelAccess().getStatementsAssignment(), "rule__Model__StatementsAssignment");
					put(grammarAccess.getClassDeclAccess().getNameAssignment_1(), "rule__ClassDecl__NameAssignment_1");
					put(grammarAccess.getClassDeclAccess().getInheritsAssignment_2_1(), "rule__ClassDecl__InheritsAssignment_2_1");
					put(grammarAccess.getClassDeclAccess().getInheritsAssignment_2_2_1(), "rule__ClassDecl__InheritsAssignment_2_2_1");
					put(grammarAccess.getClassDeclAccess().getSectionsAssignment_4(), "rule__ClassDecl__SectionsAssignment_4");
					put(grammarAccess.getClassDeclAccess().getSectionsAssignment_5(), "rule__ClassDecl__SectionsAssignment_5");
					put(grammarAccess.getClassSectionDeclAccess().getVisibilityAssignment_0(), "rule__ClassSectionDecl__VisibilityAssignment_0");
					put(grammarAccess.getClassSectionDeclAccess().getMembersAssignment_1(), "rule__ClassSectionDecl__MembersAssignment_1");
					put(grammarAccess.getClassSectionDeclAccess().getMembersAssignment_2_1(), "rule__ClassSectionDecl__MembersAssignment_2_1");
					put(grammarAccess.getVisibilityDeclAccess().getVisibilityAssignment_0(), "rule__VisibilityDecl__VisibilityAssignment_0");
					put(grammarAccess.getMethodDeclAccess().getReturnTypeAssignment_0(), "rule__MethodDecl__ReturnTypeAssignment_0");
					put(grammarAccess.getMethodDeclAccess().getNameAssignment_1(), "rule__MethodDecl__NameAssignment_1");
					put(grammarAccess.getAttributeDeclAccess().getTypeAssignment_0(), "rule__AttributeDecl__TypeAssignment_0");
					put(grammarAccess.getAttributeDeclAccess().getNameAssignment_1(), "rule__AttributeDecl__NameAssignment_1");
					put(grammarAccess.getAssociationDeclAccess().getTypeAssignment_0(), "rule__AssociationDecl__TypeAssignment_0");
					put(grammarAccess.getAssociationDeclAccess().getNameAssignment_1(), "rule__AssociationDecl__NameAssignment_1");
					put(grammarAccess.getSequenceDeclAccess().getNameAssignment_1(), "rule__SequenceDecl__NameAssignment_1");
					put(grammarAccess.getSequenceDeclAccess().getSectionsAssignment_3_0(), "rule__SequenceDecl__SectionsAssignment_3_0");
					put(grammarAccess.getSequenceDeclAccess().getSectionsAssignment_3_1(), "rule__SequenceDecl__SectionsAssignment_3_1");
					put(grammarAccess.getActorSectionDeclAccess().getActorsAssignment_2(), "rule__ActorSectionDecl__ActorsAssignment_2");
					put(grammarAccess.getActorSectionDeclAccess().getActorsAssignment_3_1(), "rule__ActorSectionDecl__ActorsAssignment_3_1");
					put(grammarAccess.getMessageSectionDeclAccess().getMessagesAssignment_2(), "rule__MessageSectionDecl__MessagesAssignment_2");
					put(grammarAccess.getMessageSectionDeclAccess().getMessagesAssignment_3_1(), "rule__MessageSectionDecl__MessagesAssignment_3_1");
					put(grammarAccess.getActorDeclAccess().getNameAssignment_0(), "rule__ActorDecl__NameAssignment_0");
					put(grammarAccess.getActorDeclAccess().getClassRefAssignment_1(), "rule__ActorDecl__ClassRefAssignment_1");
					put(grammarAccess.getMessageDeclAccess().getNameAssignment_0(), "rule__MessageDecl__NameAssignment_0");
					put(grammarAccess.getMessageDeclAccess().getLeftOpAssignment_1(), "rule__MessageDecl__LeftOpAssignment_1");
					put(grammarAccess.getMessageDeclAccess().getOperatorAssignment_2(), "rule__MessageDecl__OperatorAssignment_2");
					put(grammarAccess.getMessageDeclAccess().getRighOpAssignment_3(), "rule__MessageDecl__RighOpAssignment_3");
					put(grammarAccess.getMessageDeclAccess().getMethodAssignment_4_1(), "rule__MessageDecl__MethodAssignment_4_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.frantz.txtuml.ui.contentassist.antlr.internal.InternalTxtUMLParser typedParser = (com.frantz.txtuml.ui.contentassist.antlr.internal.InternalTxtUMLParser) parser;
			typedParser.entryRuleModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public TxtUMLGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(TxtUMLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
